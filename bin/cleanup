#!/bin/bash
set -euo pipefail
#shopt -s nullglob

DRY_RUN=false
while (( $# )); do
  case "$1" in
    -n|--dry-run) DRY_RUN=true ; shift 1 ;;
    *) echo "Unknown option '$1'" 1>&2; exit 1;;
  esac
done

havecmd() { command -v "$1" &>/dev/null; }
is-dry-run() { $DRY_RUN; }
# Remove individual directories or files
nuke() {
  local X
  for X; do
    if ! [ -e "$X" ]; then continue; fi
    if is-dry-run; then
      echo "(DRY RUN) NUKING: $X"
    else
      echo "NUKING: $X"
      rm -rf "$X";
    fi
  done
}
empty-dirs() {
  local DIR
  for DIR; do
    if [ -d "$DIR" ]; then nuke "$DIR"/*; fi
  done
}
only-keep-newest-version() {
  local GLOB NUKE
  for GLOB in "$@"; do
    while IFS= read -r NUKE; do
      if [ -n "$NUKE" ]; then nuke "$NUKE"; fi
    done < <(ls -1d $GLOB | sort -Vr | tail -n +2)
  done
}

empty-dirs \
  ~/.pm2/logs \
  ~/.yarn/*/cache \
  ~/Library/Caches/Homebrew/downloads

if havecmd brew; then brew cleanup; fi
if havecmd cypress; then cypress cache clear; fi
if havecmd nvm; then nvm cache clear; fi
if havecmd npm; then npm cache clear --force; fi
if havecmd docker; then docker system prune -f; fi
if havecmd pio; then pio system prune -f; fi

only-keep-newest-version \
  "$HOME/Library/Caches/typescript/*" \
  "$HOME/Library/Caches/node-gyp/*" \
  "$HOME/Library/Caches/ms-playwright/chromium-*" \
  "$HOME/Library/Caches/ms-playwright/ffmpeg-*" \
  "$HOME/Library/Caches/ms-playwright/firefox-*" \
  "$HOME/Library/Caches/ms-playwright/webkit-*" \
